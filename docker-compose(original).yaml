version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: xmlsign_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/init:/docker-entrypoint-initdb.d

  springboot-app:
    image: iconesigndocker-springboot-app:v1.0.1
    container_name: springboot-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/xmlsign_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./temp/download:/app/temp/download
      - ./src/main/resources/certificates:/app/src/main/resources/certificates
    depends_on:
      - postgres
    restart: unless-stopped
    ports:
      - "8080:8080"
    # ⚠️ No ports exposed (private)

  nextjs-app:
    image: iconesigndocker-nextjs-app
    container_name: nextjs-front
    environment:
      - NEXT_PUBLIC_API_URL=http://springboot-app:8080
    restart: unless-stopped
    depends_on:
      - springboot-app

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cf-tunnel
    restart: unless-stopped
    environment:
     - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    command: tunnel --no-autoupdate --url http://nextjs-app:3000
    depends_on:
     - nextjs-app

volumes:
  pgdata:
